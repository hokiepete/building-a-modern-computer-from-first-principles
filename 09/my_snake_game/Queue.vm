function Queue.new 1
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
push argument 1
call Node.new 2
pop local 0
push local 0
pop this 0
push local 0
pop this 1
push constant 1
pop this 2
push pointer 0
return
function Queue.pushNode 2
push argument 0
pop pointer 0
push this 0
pop local 0
push argument 1
push argument 2
call Node.new 2
pop local 1
push local 0
push local 1
call Node.setPredecessor 2
pop temp 0
push local 1
push local 0
call Node.setSuccessor 2
pop temp 0
push local 1
pop this 0
push this 2
push constant 1
add
pop this 2
push constant 0
return
function Queue.popNode 1
push argument 0
pop pointer 0
push this 2
push constant 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
pop local 0
push local 0
call node.getPredecessor 1
pop this 1
push local 0
call node.dispose 1
pop temp 0
label IF_FALSE0
push constant 0
return
function Queue.getHead 0
push argument 0
pop pointer 0
push this 0
return
function Queue.getTail 0
push argument 0
pop pointer 0
push this 1
return
function Queue.getLen 0
push argument 0
pop pointer 0
push this 2
return
function Queue.dispose 1
push argument 0
pop pointer 0
label WHILE_EXP0
push this 2
push constant 0
gt
not
if-goto WHILE_END0
push this 0
pop local 0
push local 0
call Node.getSuccessor 1
pop this 0
push local 0
call Node.dispose 1
pop temp 0
push this 2
push constant 1
sub
pop this 2
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call memory.deAlloc 1
pop temp 0
push constant 0
return
