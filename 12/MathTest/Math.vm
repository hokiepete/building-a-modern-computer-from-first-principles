function Math.init 2
push constant 16
call Array.new 1
pop static 0
push constant 0
pop local 0
push constant 1
pop local 1
label WHILE_EXP0
push local 0
push constant 16
lt
not
if-goto WHILE_END0
push local 0
push static 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 1
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Math.abs 0
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
neg
return
goto IF_END0
label IF_FALSE0
push argument 0
return
label IF_END0
function Math.bit 0
push argument 0
push argument 1
push static 0
add
pop pointer 1
push that 0
and
push constant 0
gt
return
function Math.multiply 3
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
call Math.abs 1
pop argument 0
push constant 0
not
pop local 1
goto IF_END0
label IF_FALSE0
push constant 0
pop local 1
label IF_END0
push argument 1
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
call Math.abs 1
pop argument 1
push constant 0
not
pop local 2
goto IF_END1
label IF_FALSE1
push constant 0
pop local 2
label IF_END1
push argument 0
push argument 1
call Math.multiplication 2
pop local 0
push local 1
push local 2
and
push local 1
not
push local 2
not
and
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
return
goto IF_END2
label IF_FALSE2
push local 0
neg
return
label IF_END2
function Math.multiplication 3
push constant 0
pop local 0
push argument 0
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push local 2
push constant 16
lt
not
if-goto WHILE_END0
push argument 1
push local 2
call Math.bit 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push local 1
add
pop local 0
label IF_FALSE0
push local 1
push local 1
add
pop local 1
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Math.divide 3
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
call Math.abs 1
pop argument 0
push constant 0
not
pop local 1
goto IF_END0
label IF_FALSE0
push constant 0
pop local 1
label IF_END0
push argument 1
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
call Math.abs 1
pop argument 1
push constant 0
not
pop local 2
goto IF_END1
label IF_FALSE1
push constant 0
pop local 2
label IF_END1
push argument 0
push argument 1
call Math.division 2
pop local 0
push local 1
push local 2
and
push local 1
not
push local 2
not
and
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
return
goto IF_END2
label IF_FALSE2
push local 0
neg
return
label IF_END2
function Math.division 2
push argument 1
push argument 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 0
push argument 1
push argument 1
add
call Math.division 2
pop local 0
push constant 2
push local 0
call Math.multiply 2
push argument 1
call Math.multiply 2
pop local 1
push local 1
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 31
call String.new 1
push constant 79
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 102
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 119
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 103
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 0
return
label IF_FALSE1
push argument 0
push local 1
sub
push argument 1
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push local 0
add
return
goto IF_END2
label IF_FALSE2
push local 0
push local 0
add
push constant 1
add
return
label IF_END2
function Math.sqrt 3
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 0
pop local 1
push constant 7
pop local 0
label WHILE_EXP0
push local 0
push constant 1
neg
gt
not
if-goto WHILE_END0
push local 1
push local 0
push static 0
add
pop pointer 1
push that 0
add
push local 1
push local 0
push static 0
add
pop pointer 1
push that 0
add
call Math.multiply 2
pop local 2
push local 2
push argument 0
lt
push local 2
push argument 0
eq
or
push local 2
push constant 0
gt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push local 0
push static 0
add
pop pointer 1
push that 0
add
pop local 1
label IF_FALSE1
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 1
return
function Math.max 0
push argument 0
push argument 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
return
goto IF_END0
label IF_FALSE0
push argument 1
return
label IF_END0
function Math.min 0
push argument 0
push argument 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
return
goto IF_END0
label IF_FALSE0
push argument 1
return
label IF_END0
